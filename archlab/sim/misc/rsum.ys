# /* rsum_list - Recursive version of sum_list */

# Execution begins at address 0
    .pos 0
    irmovq stack, %rsp # set up stack pointer
    call main # execute main program
    halt # terminate program

# sample linked list
    .align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0x0c00
    .quad 0

main:
    irmovq ele1, %rdi
    call rsum_list
    ret

rsum_list:
    xorq %rax, %rax
    andq %rdi, %rdi
    jne loop
    ret

loop:
    mrmovq (%rdi), %rsi
    addq %rsi, %rax
    rrmovq %rax, %rdx
    pushq %rdx
    mrmovq 8(%rdi), %rdi
    call rsum_list
    popq %rdx
    addq %rdx, %rax
    ret

# stack starts here and grows to lower address
    .pos 0x200
stack:



